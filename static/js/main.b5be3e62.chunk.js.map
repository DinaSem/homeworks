{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h8/bll/HW8.module.css","p2-homeworks/h12/HW12.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h10/bll/HW10.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/Slider.js","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Error404","href","SuperSelect","options","onChange","onChangeOption","restProps","mappedOptions","map","o","i","value","e","currentTarget","SuperRadio","type","name","onChangeCallback","checked","arr","HW7","useState","homeWorkReducer","state","action","sort","reverse","filter","m","age","SuperButton","red","className","finalClassName","s","default","disabled","initialState","_id","v1","HW8","useReducer","people","setPeople","finalPeople","p","div","span","key","onClick","payload","Clock","timerId","setTimerId","Date","setDate","show","setShow","stop","window","clearInterval","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","id","setInterval","HW9","initState","isLoading","loadingAC","HW10","useSelector","loading","dispatch","useDispatch","console","log","preloader","src","alt","setTimeout","SuperRange","onChangeRange","finalRangeClassName","range","Slider","textValue1","textValue2","onSlide","render","handle","setState","toFixed","this","connect","start","behaviour","min","max","React","Component","SuperDoubleRange","sliderWidth","sliderPosition","HW11","value1","setValue1","setValue2","inputValue1","target","Junior","themes","HW12","theme","wrapperHW12","JuniorPlus","Message","props","main","avatar","message","text","time","messageData","HW1","Affair","affair","priority","littleButton","deleteAffairCallback","Affairs","mappedAffairs","data","a","button","setFilter","defaultAffairs","HW2","affairs","setAffairs","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","onKeyPress","totalUsers","inputClass","errorInput","superInput","GreetingContainer","users","addUserCallback","setName","setError","alert","length","trimeName","trim","HW3","setUsers","user","SuperInputText","onChangeText","onEnter","spanClassName","finalSpanClassName","finalInputClassName","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","PATH","Routes","Switch","Route","path","exact","Redirect","to","Header","panel","content","NavLink","HW5","HashRouter","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b5be3e62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"littleButton\":\"Affairs_littleButton__1DGhI\",\"button\":\"Affairs_button__88Xus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__343YK\",\"sliderWidth\":\"SuperRange_sliderWidth__2370C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__3cv4n\",\"message\":\"Message_message__P70In\",\"avatar\":\"Message_avatar__1TJsT\",\"text\":\"Message_text__3Pk9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__2Wa0b\",\"panel\":\"Header_panel__UwGTU\",\"head\":\"Header_head__2x8FT\",\"content\":\"Header_content__3l1JN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__1UcAM\",\"default\":\"SuperButton_default__3sEBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"HW8_div__X48iT\",\"span\":\"HW8_span__BN5Yg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__3CUEG\",\"dark-text\":\"HW12_dark-text__f9rQ3\",\"red\":\"HW12_red__iWTzV\",\"red-text\":\"HW12_red-text__33BFA\",\"some\":\"HW12_some__1KiE7\",\"some-text\":\"HW12_some-text__2Eyqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2i0FJ\",\"error\":\"Greeting_error__3GnDO\",\"superInput\":\"Greeting_superInput__2oTLh\",\"errorInput\":\"Greeting_errorInput__aYcA6\",\"button\":\"Greeting_button__sUlrd\",\"dbutton\":\"Greeting_dbutton__3NfPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1_tPc\",\"errorInput\":\"SuperInputText_errorInput__1N0SC\",\"error\":\"SuperInputText_error__4KGlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__uYmZ0\",\"column\":\"HW4_column__6C1pv\",\"testSpanError\":\"HW4_testSpanError__20yrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3i3xm\",\"spanClassName\":\"SuperCheckbox_spanClassName__3pJRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2TEVI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"HW10_preloader__1FXZZ\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <a href=\"https://www.clipartmax.com/png/middle/136-1367660_nursing-students-cartoon.png\"></a>\r\n            </div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport {Simulate} from \"react-dom/test-utils\";\r\n\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <option key={o + '-' + i} value={o}>{o}</option>\r\n    )) : []\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o===value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import { initialStateType} from \"../HW8\";\r\n\r\nexport const homeWorkReducer = (state: Array<initialStateType>, action: GeneralType) => { // need to fix any\r\n    switch (action.type) {\r\n        case 'sort': {\r\n                return [...state.sort()]\r\n            }\r\n\r\n        case 'sortd': {\r\n            return [...state.reverse()]\r\n                }\r\n\r\n        case 'check': {\r\n                return [...state.filter(m=>m.age>18)]\r\n        }\r\n        default: return state\r\n    }\r\n}\r\ntype GeneralType= sortUpACType|checkACType|sortDownACType\r\ntype sortUpACType = ReturnType<typeof sortUpAC>\r\ntype sortDownACType = ReturnType<typeof sortDownAC>\r\ntype checkACType = ReturnType<typeof checkAC>\r\nexport const sortUpAC = () => {\r\n  return{\r\n      type:'sort',\r\n      payload: 'up',\r\n\r\n  }as const\r\n}\r\nexport const sortDownAC = () => {\r\n    return{\r\n        type:'sortd',\r\n        payload: 'down',\r\n    }as const\r\n}\r\nexport const checkAC = () => {\r\n    return{\r\n        type:'check',\r\n        payload: '18',\r\n    }as const\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.disabled}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {useReducer} from 'react'\r\nimport {checkAC, homeWorkReducer, sortDownAC, sortUpAC} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {v1} from \"uuid\";\r\nimport s from './bll/HW8.module.css'\r\n\r\nexport type initialStateType = {\r\n    _id: string\r\n    name: string\r\n    age: number\r\n}\r\nexport type InstructioonsType = {\r\n    type: string\r\n    payload: string\r\n}\r\n\r\nconst initialState: Array<initialStateType> = [\r\n    {_id: v1(), name: 'Кот', age: 3},\r\n    {_id: v1(), name: 'Александр', age: 66},\r\n    {_id: v1(), name: 'Коля', age: 16},\r\n    {_id: v1(), name: 'Виктор', age: 44},\r\n    {_id: v1(), name: 'Дмитрий', age: 40},\r\n    {_id: v1(), name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useReducer(homeWorkReducer, initialState) // need to fix any\r\n    const finalPeople = people.map((p: any) =>\r\n            <div key={p.key}>\r\n                        <div className={s.div}>\r\n                            <div className={s.span}>{p.name}</div>\r\n                            <div className={s.span}>{p.age}</div>\r\n                        </div>\r\n\r\n            </div>\r\n    )\r\n\r\n    const sortUp = () => setPeople(sortUpAC())\r\n    const sortDown = () => setPeople(sortDownAC())\r\n    const check = () => setPeople(checkAC())\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n\r\n                        {finalPeople}\r\n\r\n            </div>\r\n\r\n\r\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n            <div><SuperButton onClick={check}>check 18</SuperButton></div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n         window.clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date() )}, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    const stringTime = new Date().toLocaleTimeString()// fix with date\r\n    const stringDate = new Date().toLocaleDateString() // fix with date\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","\r\nexport const initState = {\r\nisLoading:false\r\n}\r\nexport const loadingReducer = (state = initState, action: loadingACType): typeof initState => { // fix any\r\n    switch (action.type) {\r\n        case 'LOADING': {\r\n            return {...state,isLoading: action.isLoading}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype loadingACType = {\r\n    type:'LOADING'\r\n    isLoading:boolean\r\n}\r\n\r\nexport const loadingAC = (isLoading:boolean): loadingACType => {\r\n    return{\r\n        type:'LOADING',isLoading\r\n    }as const\r\n} // fix any","import React, {MouseEventHandler} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {Provider, useDispatch, useSelector} from \"react-redux\";\r\nimport {loadingAC} from \"./bll/loadingReducer\";\r\nimport store, {AppStoreType} from \"./bll/store\";\r\nimport s from './bll/HW10.module.css';\r\n\r\n\r\nfunction HW10() {\r\n\r\n    const isLoading = useSelector<AppStoreType,boolean>(state => state.loading.isLoading)\r\n    const dispatch = useDispatch()\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true))\r\n\r\n        setTimeout(()=>{\r\n            dispatch(loadingAC(false))\r\n        },3000)\r\n    };\r\n    console.log('loading...')\r\n    return (\r\n\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n            {/*should work (должно работать)*/}\r\n            {isLoading\r\n                ? (\r\n                    <div className={s.preloader}>\r\n                        <img src=\"https://i.gifer.com/origin/6a/6a2dfb96f278692f0900cc08975efe0e.gif\" alt=\"preloader\"/>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )}\r\n            <hr/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","\r\nimport React from 'react';\r\nimport Nouislider from 'nouislider-react';\r\nimport 'nouislider/dist/nouislider.css'\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        textValue1: null,\r\n        textValue2: null,\r\n    };\r\n\r\n    onSlide = (render, handle, value, ) => {\r\n        this.setState({\r\n            textValue1: value[0].toFixed(0),\r\n            textValue2: value[1].toFixed(0),\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { textValue1, textValue2} = this.state;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <span>\r\n                        {textValue1}\r\n                    </span>\r\n\r\n                <Nouislider\r\n                    connect\r\n                    start={[20, 80]}\r\n                    behaviour=\"tap\"\r\n                    range={{\r\n                        min: [0],\r\n                        max: [100]\r\n                    }}\r\n                    onSlide={this.onSlide}\r\n                />\r\n                    <span>\r\n                        {textValue2}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Slider;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from \"../c7-SuperRange/SuperRange.module.css\";\r\nimport Nouislider from \"nouislider-react\";\r\n\r\nimport Slider from \"./Slider\";\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperDoubleRangePropsType =DefaultInputPropsType & {\r\n    onChangeRange?: (value: number) => void\r\n    value?: [number, number]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n//     {\r\n//         onChangeRange, value,\r\n//         // min, max, step, disable, ...\r\n//     }\r\n// ) => {\r\n//     // сделать самому, можно подключать библиотеки\r\n//\r\n//     return (\r\n//         <>\r\n//             DoubleRange\r\n//         </>\r\n//     )\r\n// }\r\n{\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeRange,\r\n    className,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n}\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n\r\n    return (\r\n        <div className={s.sliderWidth}>\r\n            <Slider className={s.sliderPosition}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, {ChangeEventHandler, useState} from 'react'\r\nimport SuperRange from './common/c7-SuperRange/SuperRange'\r\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(0)\r\n    const [value2, setValue2] = useState(100)\r\n\r\n    // setMin = (e) => {\r\n    //     const { min, max, currentMax, minValueBetween } = this.state;\r\n    //     const inputMin = e.target.value;\r\n    //\r\n    //     this.setState({\r\n    //         inputMin\r\n    //     });\r\n\r\nconst RangeSlider = (e:any) => {\r\n    const inputValue1 = e.target.value;\r\n    let value1 = inputValue1\r\n    setValue1(value1)\r\n}\r\n    const SuperRangeSlider = (e:any) => {\r\n        const inputValue1 = e.target.value;\r\n        let value1 = inputValue1\r\n        setValue1(value1)\r\n        const inputValue2 = e.target.value;\r\n        let value2 = inputValue2\r\n        setValue2(value1)\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperRange\r\n                    onChange={RangeSlider}\r\n                    // сделать так чтоб value1 изменялось\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <SuperDoubleRange\r\n                    onChange={SuperRangeSlider}\r\n                    // сделать так чтоб value1 изменялось\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW11\r\n","import React from 'react'\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React, {useState} from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport SuperSelect from \"../h7/common/c5-SuperSelect/SuperSelect\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst themes: Array<string> = ['some', 'red', 'dark'];\r\n\r\nfunction HW12() {\r\n    const theme = useSelector((state: AppStoreType) => state.theme.themes)\r\n    const dispatch = useDispatch()\r\nconst onChangeOption = (options:string) => {\r\n  if (options==='some'){\r\n      dispatch(('SOME'))\r\n  }if  (options==='red'){\r\n        dispatch(('RED'))\r\n  }if (options==='dark'){\r\n        dispatch(('DARK'))\r\n    }\r\n}\r\n\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n                homeworks 12\r\n\r\n                <div className={s.wrapperHW12}>\r\n                    <SuperSelect\r\n                        options={themes}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW12 from \"../../h12/HW12\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>пока пусто\r\n         <HW12/>\r\n{/*            <HW13/>\r\n            <HW14/>\r\n            <HW15/>\r\n            <HW16/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз"," import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\n\r\ntype  MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n/*const messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Артем',\r\n    message: 'npm start нажал?',\r\n    time: '22:00',\r\n}*/\r\n\r\n\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.avatar}>\r\n                <img src={props.avatar} alt=\"\"/>\r\n            </div>\r\n            <div className={s.message}>\r\n                <div className={s.text}>\r\n                    <div>{props.name}</div>\r\n                    <div>{props.message}</div>\r\n                    <div>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport './Message.module.css'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            ДЗ1\r\n            <div>\r\n                <Message\r\n                    avatar={messageData.avatar}\r\n                    name={messageData.name}\r\n                    message={messageData.message}\r\n                    time={messageData.time}\r\n                />\r\n            </div>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType, deleteAffair} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id:number)=>void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {// need to fix\r\nprops.deleteAffairCallback(props.affair._id)\r\n    }\r\n    return (\r\n        <div>\r\n          <span>{\" \" + props.affair.name +\" \"}</span>\r\n          <span>{\" \" + props.affair.priority +\" \"}</span>\r\n            <button className={s.littleButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, { Dispatch, SetStateAction } from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter:FilterType)=>void\r\n    deleteAffairCallback: (id:number)=>void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={s.button} onClick={setAll}>All</button>\r\n            <button className={s.button} onClick={setHigh}>High</button>\r\n            <button className={s.button} onClick={setMiddle}>Middle</button>\r\n            <button className={s.button} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport Affair from \"./Affair\";\r\n\r\n// types\r\nexport type AffairPriorityType = 'high'| 'low'|'middle'// need to fix any\r\nexport type AffairType = {\r\n    _id:number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n     else if (filter === 'high') return affairs.filter(f=>f.priority === 'high' )\r\n     else if (filter === 'middle') return affairs.filter(f=>f.priority === 'middle' )\r\n     else if (filter === 'low') return affairs.filter(f=>f.priority === 'low' )\r\nelse{ \r\n}\r\nreturn []\r\n}\r\n\r\nexport const deleteAffair = (affairs:AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(f=>f._id !== _id )\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            HW 2\r\n            \r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=>void// need to fix any\n    onKeyPress :(e:KeyboardEvent<HTMLInputElement>)=>void\n    addUser: ()=>void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, onKeyPress, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error? s.errorInput:s.superInput // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}\n                   onKeyPress={onKeyPress}\n            />\n            <span>{error}</span>\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[]// need to fix any\n    addUserCallback: (name: string)=>void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e:ChangeEvent<HTMLInputElement> ) => {\n        const trimeName = e.currentTarget.value.trim()\n\n        if(trimeName){\n            setName(trimeName)\n            error && setError('')\n        }else{\n            setName('')\n            setError('напиши хоть что-то')\n        }\n    }\n\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello  ${name} !`) // need to fix\n        setName('')\n    }\n\n    const onKeyPress=(e:KeyboardEvent<HTMLInputElement>)=>{\n        if (e.key===\"Enter\"&& name){\n            addUser()\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPress={onKeyPress}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string// need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<any>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const user = {id: v1(), name:name}\n        setUsers([user,...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className? s.superInput:''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        if (onChangeChecked) {\r\n            onChangeChecked(!onChangeChecked)//setChecked????\r\n\r\n        }\r\n// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        const state = restoreState('editable-span-value',value)\r\n        setValue(state)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport s from './../Header.module.css'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div  >\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Redirect, Switch, Route} from 'react-router-dom'\r\nimport Error404 from './pages/Error404'\r\nimport Junior from './pages/Junior'\r\nimport JuniorPlus from './pages/JuniorPlus'\r\nimport PreJunior from './pages/PreJunior'\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIORPLUS: '/junior-plus'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n\r\n            <Switch>\r\n\r\n                в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\r\n                exact нужен чтоб указать полное совподение (что после '/' ничего не будет)\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIORPLUS} render={() => <JuniorPlus/>}/>\r\n\r\n                у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from \"./Routes\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <div className={s.panel}>\r\n            <div>\r\n                <div className={s.content}>\r\n                    <div>\r\n                        <NavLink className={s.main} to={PATH.PRE_JUNIOR}>Pre-Junior</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink className={s.main} to={PATH.JUNIOR}>Junior</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink className={s.main} to={PATH.JUNIORPLUS}>JuniorPlus</NavLink>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n// <div className=\"panel\">\r\n//     <div className=\"head\">\r\n//         <p>Заголовок блока</p>\r\n//     </div>\r\n//     <div className=\"content\">\r\n//         Содержимое панели\r\n//     </div>\r\n// </div>\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                {/*в gh-pages лучше работает HashRouter*/}\r\n\r\n\r\n                <Header />\r\n\r\n                <Routes/>\r\n\r\n\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<div>react homeworks:</div>*/}\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","export type ThemeInitState = {\r\n    themes: string\r\n}\r\n\r\nconst initState = { themes: 'some'};\r\n\r\nexport const themeReducer = (state: ThemeInitState = initState, action: ThemeActionTotalType): ThemeInitState => { // fix any\r\n    switch (action.type) {\r\n        case 'DARK':\r\n            return {themes: 'dark'}\r\n        case 'RED':\r\n            return {themes: 'red'}\r\n        case 'SOME':\r\n            return {themes: 'some'}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport type ThemeActionTotalType = SetDarkThemeActionType | SetRedThemeActionType | SetSomeThemeActionType\r\n\r\ntype SetDarkThemeActionType = {\r\n    type: 'DARK'\r\n}\r\n\r\ntype SetRedThemeActionType = {\r\n    type: 'RED'\r\n}\r\n\r\ntype SetSomeThemeActionType = {\r\n    type: 'SOME'\r\n}","import {loadingReducer} from './loadingReducer'\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n    theme:themeReducer,\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport store from \"./p2-homeworks/h10/bll/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}