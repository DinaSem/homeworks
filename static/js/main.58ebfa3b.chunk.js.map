{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","main","avatar","src","alt","message","text","name","time","messageData","HW1","Affair","affair","priority","littleButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","onKeyPress","totalUsers","inputClass","errorInput","superInput","value","onChange","disabled","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimeName","currentTarget","trim","key","HW3","setUsers","user","id","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","checked","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,OAAS,wBAAwB,QAAU,2B,kBCA1GD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,wB,kBCA1HD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,WAAa,6BAA6B,WAAa,6BAA6B,OAAS,yBAAyB,QAAU,4B,gBCA1ND,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,gBCA1HD,EAAOC,QAAU,CAAC,IAAM,yBAAyB,QAAU,+B,iBCA3DD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,gBCAxFD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,iBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,iJCmCTC,MAjBf,SAAiBC,GACb,OACI,sBAAKC,UAAWC,IAAEC,KAAlB,UACI,qBAAKF,UAAWC,IAAEE,OAAlB,SACI,qBAAKC,IAAKL,EAAMI,OAAQE,IAAI,OAEhC,qBAAKL,UAAWC,IAAEK,QAAlB,SACI,sBAAKN,UAAWC,IAAEM,KAAlB,UACI,8BAAMR,EAAMS,OACZ,8BAAMT,EAAMO,UACZ,8BAAMP,EAAMU,gBCzB1BC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QAsBKC,MAnBf,WACI,OACI,gDAEI,8BACI,cAAC,EAAD,CACIR,OAAQO,EACRF,KAAME,EACNJ,QAASI,EACTD,KAAMC,MAKd,2B,uBCFGE,MAbf,SAAgBb,GAIZ,OACI,gCACE,+BAAO,IAAMA,EAAMc,OAAOL,KAAM,MAChC,+BAAO,IAAMT,EAAMc,OAAOC,SAAU,MAClC,wBAAQd,UAAWC,IAAEc,aAAcC,QAPpB,WAC3BjB,EAAMkB,qBAAqBlB,EAAMc,OAAOK,MAM5B,mBCqBGC,MA3Bf,SAAiBpB,GACb,IAAMqB,EAAgBrB,EAAMsB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIV,OAAQU,EACRN,qBAAsBlB,EAAMkB,sBAFvBM,EAAEL,QAWf,OACI,gCAEKE,EAED,wBAAQpB,UAAWC,IAAEuB,OAAQR,QAVtB,WAAOjB,EAAM0B,UAAU,QAU9B,iBACA,wBAAQzB,UAAWC,IAAEuB,OAAQR,QAVrB,WAAOjB,EAAM0B,UAAU,SAU/B,kBACA,wBAAQzB,UAAWC,IAAEuB,OAAQR,QAVnB,WAAOjB,EAAM0B,UAAU,WAUjC,oBACA,wBAAQzB,UAAWC,IAAEuB,OAAQR,QAVtB,WAAOjB,EAAM0B,UAAU,QAU9B,qBCpBNC,EAA+B,CACjC,CAACR,IAAK,EAAGV,KAAM,QAASM,SAAU,QAClC,CAACI,IAAK,EAAGV,KAAM,QAASM,SAAU,OAClC,CAACI,IAAK,EAAGV,KAAM,QAASM,SAAU,OAClC,CAACI,IAAK,EAAGV,KAAM,OAAQM,SAAU,QACjC,CAACI,IAAK,EAAGV,KAAM,aAAcM,SAAU,WA8C5Ba,MA5Bf,WAAgB,IAAD,EACmBC,mBAAuBF,GAD1C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EAlBmB,SAACH,EAAuBE,GACjD,MAAe,QAAXA,EAAyBF,EACR,SAAXE,EAA0BF,EAAQE,QAAO,SAAAE,GAAC,MAAiB,SAAfA,EAAEnB,YACnC,WAAXiB,EAA4BF,EAAQE,QAAO,SAAAE,GAAC,MAAiB,WAAfA,EAAEnB,YACrC,QAAXiB,EAAyBF,EAAQE,QAAO,SAAAE,GAAC,MAAiB,QAAfA,EAAEnB,YAGpD,GAWqBoB,CAAcL,EAASE,GAG/C,OACI,gCACI,uBADJ,OAKI,cAAC,EAAD,CACIV,KAAMW,EACNP,UAAWA,EACXR,qBAXiB,SAACC,GAAD,OAAiBY,EATtB,SAACD,EAAsBX,GAC/C,OAAOW,EAAQE,QAAO,SAAAE,GAAC,OAAEA,EAAEf,MAAQA,KAQsBiB,CAAaN,EAASX,KAYnEa,OAAQA,IAGZ,uBAGA,2B,wBC5BGK,EAnB+B,SAAC,GAEzC,IADD5B,EACA,EADAA,KAAM6B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAAYC,EACnD,EADmDA,WAE9CC,EAAaH,EAAOtC,IAAE0C,WAAW1C,IAAE2C,WAEzC,OACI,gCACI,uBAAOC,MAAOrC,EACPsC,SAAUT,EACVrC,UAAW0C,EACXF,WAAYA,IAEnB,+BAAOD,IACP,wBAAQvB,QAASsB,EAAStC,UAAWC,IAAEuB,OAAQuB,UAAWvC,EAA1D,iBACA,+BAAOiC,QC8BJO,EA3CiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEtB,mBAAiB,IADiD,mBACnFpB,EADmF,KAC7E2C,EAD6E,OAEhEvB,mBAAiB,IAF+C,mBAEnFW,EAFmF,KAE5Ea,EAF4E,KAgBpFd,EAAU,WACZY,EAAgB1C,GAChB6C,MAAM,UAAD,OAAW7C,EAAX,OACL2C,EAAQ,KAUNV,EAAaQ,EAAMK,OAEzB,OACI,cAAC,EAAD,CACI9C,KAAMA,EACN6B,gBA9BgB,SAACkB,GACrB,IAAMC,EAAYD,EAAEE,cAAcZ,MAAMa,OAErCF,GACCL,EAAQK,GACRjB,GAASa,EAAS,MAElBD,EAAQ,IACRC,EAAS,mGAuBTd,QAASA,EACTC,MAAOA,EACPE,WAAYA,EACZD,WAhBS,SAACe,GACF,UAARA,EAAEI,KAAgBnD,IAClB8B,IACAa,EAAQ,S,QCJLS,MAxBf,WAAgB,IAAD,EACehC,mBAAc,IAD7B,mBACJqB,EADI,KACGY,EADH,KAQX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBZ,MAAOA,EAAOC,gBAXjB,SAAC1C,GACrB,IAAMsD,EAAO,CAACC,GAAIC,cAAMxD,KAAKA,GAC7BqD,EAAS,CAACC,GAAF,mBAAUb,QAWd,uBAGA,2B,+BC4BGgB,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEpB,EAOH,EAPGA,SAAUqB,EAOb,EAPaA,aACV3B,EAMH,EANGA,WAAY4B,EAMf,EANeA,QACZ7B,EAKH,EALGA,MACAvC,EAIH,EAJGA,UAAWqE,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMtE,IAAEsC,MAAR,YAAiB8B,GAAgC,IACnEG,EAAmB,UAAMvE,IAAE0C,WAAR,YAAsB3C,EAAWC,IAAE2C,WAAW,IAEvE,OACI,qCACI,mCACIsB,KAAM,OACNpB,SArBa,SAACS,GACtBT,GACGA,EAASS,GAEZY,GAAgBA,EAAaZ,EAAEE,cAAcZ,QAkBrCL,WAhBe,SAACe,GACxBf,GAAcA,EAAWe,GAEzBa,GACa,UAAVb,EAAEI,KACFS,KAYKpE,UAAWwE,GAEPF,IAEP/B,GAAS,sBAAMvC,UAAWuE,EAAjB,SAAsChC,Q,kCC3B7CkC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IACGJ,GAEN,EAHQtE,UAGR,oCACK2E,EAAc,UAAMD,EAAMzE,IAAEyE,IAAMzE,IAAE2E,QAAtB,YAAiC3E,IAAE8C,UAEvD,OACI,oCACI/C,UAAW2E,GACPL,K,iBC0BDO,EApCyC,SAAC,GASpD,EAPGX,KAOF,IANEpB,EAMH,EANGA,SAAUgC,EAMb,EANaA,gBACV9E,EAKH,EALGA,UACA+E,GAIH,EALcV,cAKd,EAJGU,UAEGT,EAEN,4FAWKE,EAAmB,UAAMvE,IAAE+E,SAAR,YAAoBhF,GAAwB,IAErE,OACI,kCACI,mCACIkE,KAAM,WACNpB,SAhBa,SAACS,GACtBT,GACGA,EAASS,GACRuB,GACAA,GAAiBA,IAab9E,UAAWwE,GAEPF,IAEPS,GAAY,sBAAM/E,UAAWC,IAAEoE,cAAnB,SAAmCU,QCqC7CE,MAzEf,WAAgB,IAAD,EACarD,mBAAiB,IAD9B,mBACJrB,EADI,KACE2E,EADF,KAEL3C,EAAQhC,EAAO,GAAK,QAEpB4E,EAAY,WACV5C,EACAc,MAAM,gFAENA,MAAM9C,IARH,EAYmBqB,oBAAkB,GAZrC,mBAYJwD,EAZI,KAYKC,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKrF,UAAWC,IAAEqF,OAAlB,UACI,cAAC,EAAD,CACIzC,MAAOtC,EACP4D,aAAce,EACdd,QAASe,EACT5C,MAAOA,IAIX,cAAC,EAAD,CACIvC,UAAWC,IAAEsF,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIb,KAAG,EACH1D,QAASmE,EAFb,qBAOA,cAAC,EAAD,CAAapC,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIqC,QAASA,EACTN,gBAAiBO,EAFrB,wBAQA,cAAC,EAAD,CAAeD,QAASA,EAAStC,SA/CxB,SAACS,GAAD,OAAsC8B,EAAW9B,EAAEE,cAAc2B,eAkD9E,uBAKA,2BCrDGI,MAdf,WACI,OACI,sBAAKxF,UAAWC,IAAEuF,IAAlB,UAEI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCFQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAlE,GACHmE,QAAQnE,MAAMA,EAAMjC,c","file":"static/js/main.58ebfa3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"littleButton\":\"Affairs_littleButton__1DGhI\",\"button\":\"Affairs_button__88Xus\",\"dbutton\":\"Affairs_dbutton__LeKpc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__3cv4n\",\"message\":\"Message_message__P70In\",\"avatar\":\"Message_avatar__1TJsT\",\"text\":\"Message_text__3Pk9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2i0FJ\",\"error\":\"Greeting_error__3GnDO\",\"superInput\":\"Greeting_superInput__2oTLh\",\"errorInput\":\"Greeting_errorInput__aYcA6\",\"button\":\"Greeting_button__sUlrd\",\"dbutton\":\"Greeting_dbutton__3NfPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1_tPc\",\"errorInput\":\"SuperInputText_errorInput__1N0SC\",\"error\":\"SuperInputText_error__4KGlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__1UcAM\",\"default\":\"SuperButton_default__3sEBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__uYmZ0\",\"column\":\"HW4_column__6C1pv\",\"testSpanError\":\"HW4_testSpanError__20yrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3i3xm\",\"spanClassName\":\"SuperCheckbox_spanClassName__3pJRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2TEVI\"};"," import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\n\r\ntype  MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n/*const messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Артем',\r\n    message: 'npm start нажал?',\r\n    time: '22:00',\r\n}*/\r\n\r\n\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.avatar}>\r\n                <img src={props.avatar} alt=\"\"/>\r\n            </div>\r\n            <div className={s.message}>\r\n                <div className={s.text}>\r\n                    <div>{props.name}</div>\r\n                    <div>{props.message}</div>\r\n                    <div>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport './Message.module.css'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            ДЗ1\r\n            <div>\r\n                <Message\r\n                    avatar={messageData.avatar}\r\n                    name={messageData.name}\r\n                    message={messageData.message}\r\n                    time={messageData.time}\r\n                />\r\n            </div>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType, deleteAffair} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id:number)=>void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {// need to fix\r\nprops.deleteAffairCallback(props.affair._id)\r\n    }\r\n    return (\r\n        <div>\r\n          <span>{\" \" + props.affair.name +\" \"}</span>\r\n          <span>{\" \" + props.affair.priority +\" \"}</span>\r\n            <button className={s.littleButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, { Dispatch, SetStateAction } from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter:FilterType)=>void\r\n    deleteAffairCallback: (id:number)=>void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={s.button} onClick={setAll}>All</button>\r\n            <button className={s.button} onClick={setHigh}>High</button>\r\n            <button className={s.button} onClick={setMiddle}>Middle</button>\r\n            <button className={s.button} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport Affair from \"./Affair\";\r\n\r\n// types\r\nexport type AffairPriorityType = 'high'| 'low'|'middle'// need to fix any\r\nexport type AffairType = {\r\n    _id:number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n     else if (filter === 'high') return affairs.filter(f=>f.priority === 'high' )\r\n     else if (filter === 'middle') return affairs.filter(f=>f.priority === 'middle' )\r\n     else if (filter === 'low') return affairs.filter(f=>f.priority === 'low' )\r\nelse{ \r\n}\r\nreturn []\r\n}\r\n\r\nexport const deleteAffair = (affairs:AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(f=>f._id !== _id )\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            HW 2\r\n            \r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=>void// need to fix any\n    onKeyPress :(e:KeyboardEvent<HTMLInputElement>)=>void\n    addUser: ()=>void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, onKeyPress, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error? s.errorInput:s.superInput // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}\n                   onKeyPress={onKeyPress}\n            />\n            <span>{error}</span>\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[]// need to fix any\n    addUserCallback: (name: string)=>void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e:ChangeEvent<HTMLInputElement> ) => {\n        const trimeName = e.currentTarget.value.trim()\n\n        if(trimeName){\n            setName(trimeName)\n            error && setError('')\n        }else{\n            setName('')\n            setError('напиши хоть что-то')\n        }\n    }\n\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello  ${name} !`) // need to fix\n        setName('')\n    }\n\n    const onKeyPress=(e:KeyboardEvent<HTMLInputElement>)=>{\n        if (e.key===\"Enter\"&& name){\n            addUser()\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPress={onKeyPress}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string// need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<any>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const user = {id: v1(), name:name}\n        setUsers([user,...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className? s.superInput:''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.disabled}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        if (onChangeChecked) {\r\n            onChangeChecked(!onChangeChecked)//setChecked????\r\n\r\n        }\r\n// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<div>react homeworks:</div>*/}\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}